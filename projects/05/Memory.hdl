// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 CHIP Screen {

    IN  in[16],    // what to write
    load,          // write-enable bit
    address[13];   // where to read/write
    OUT out[16];   // Screen value at the given address

    BUILTIN Screen;
    CLOCKED in, load;
}
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    //RAM16K（16K）
    //    0===000000000000000
    //16383===011111111111111
    //Screen（8K）
    //16384===100000000000000
    //16385===100000000000001
    //24575===101111111111111
    //Keyboard（1）
    //24576===110000000000000

    PARTS:
    // Put your code here:
    // 最高位是0，就是RAM16K的地址，是1就是Screen的地址（逻辑参照RAM16K芯片）
    DMux(in=load,sel=address[14],a=load0,b=load1);
    RAM16K(in=in,load=load0,address=address[0..13],out=out0);
    Screen(in=in,load=load1,address=address[0..12],out=out1);
    Mux16(a=out0,b=out1,sel=address[14],out=out2);
    Keyboard(out=out3);

    //地址高两位，如果是11开头是键盘
    And(a=address[13],b=address[14],out=isReadKey);
    Mux16(a=out2,b=out3,sel=isReadKey,out=out);
}